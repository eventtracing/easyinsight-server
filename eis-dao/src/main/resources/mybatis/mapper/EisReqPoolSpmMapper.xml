<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.netease.hz.bdms.easyinsight.dao.EisReqPoolSpmMapper">
  <resultMap id="BaseResultMap" type="com.netease.hz.bdms.easyinsight.dao.model.EisReqPoolSpm">
    <!--
      WARNING - @mbg.generated
    -->
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="req_pool_id" jdbcType="BIGINT" property="reqPoolId" />
    <result column="spm_by_obj_id" jdbcType="VARCHAR" property="spmByObjId" />
    <result column="obj_id" jdbcType="BIGINT" property="objId" />
    <result column="bridge_obj_id" jdbcType="BIGINT" property="bridgeObjId" />
    <result column="bridge_app_id" jdbcType="BIGINT" property="bridgeAppId" />
    <result column="obj_history_id" jdbcType="BIGINT" property="objHistoryId" />
    <result column="terminal_id" jdbcType="BIGINT" property="terminalId" />
    <result column="req_pool_type" jdbcType="INTEGER" property="reqPoolType" />
    <result column="req_type" jdbcType="VARCHAR" property="reqType" />
    <result column="app_id" jdbcType="BIGINT" property="appId"/>
    <result column="create_email" jdbcType="VARCHAR" property="createEmail" />
    <result column="create_name" jdbcType="VARCHAR" property="createName" />
    <result column="update_email" jdbcType="VARCHAR" property="updateEmail" />
    <result column="update_name" jdbcType="VARCHAR" property="updateName" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>

  <sql id="BASE_COLUMN_LIST" >
    id, req_pool_id, spm_by_obj_id, obj_id, bridge_obj_id, bridge_app_id, obj_history_id, terminal_id, req_pool_type, req_type, app_id,
    create_email,create_name, update_email, update_name,create_time, update_time
  </sql>

  <select id="selectBatchByIds" resultMap="BaseResultMap">
    select
    <include refid="BASE_COLUMN_LIST" />
    from eis_req_pool_spm
    <where>
      <if test="ids != null and ids.size() > 0">
        id in
        <foreach collection="ids" index="index" item="id" open="(" separator="," close=")">
          #{id}
        </foreach>
      </if>
    </where>
  </select>

  <select id="selectBatchByObjIds" resultMap="BaseResultMap">
    select
    <include refid="BASE_COLUMN_LIST" />
    from eis_req_pool_spm
    <where>
      <if test="objIds != null and objIds.size() > 0">
        obj_id in
        <foreach collection="objIds" index="index" item="objId" open="(" separator="," close=")">
          #{objId}
        </foreach>
      </if>
    </where>
  </select>


  <select id="queryLastSpm" resultMap="BaseResultMap">
    select *
    from eis_req_pool_spm as t1, (select max(id) as id from eis_req_pool_spm group by spm_by_obj_id ) as t2
    <where>
      t1.id = t2.id and app_id = #{appId}
      <if test="terminalId != null and terminalId != ''">
        and terminal_id = #{terminalId}
      </if>
    </where>
  </select>

  <insert id="insertBatch" useGeneratedKeys="true" keyProperty="id">
    insert into eis_req_pool_spm
    (<include refid="BASE_COLUMN_LIST"/>)
    values
    <foreach collection="list" item="entity" separator=",">
      (#{entity.id}, #{entity.reqPoolId}, #{entity.spmByObjId}, #{entity.objId}, #{entity.bridgeObjId}, #{entity.bridgeAppId}, #{entity.objHistoryId},
      #{entity.terminalId}, #{entity.reqPoolType}, #{entity.reqType}, #{entity.appId},
      #{entity.createEmail}, #{entity.createName}, #{entity.updateEmail}, #{entity.updateName},
      #{entity.createTime}, #{entity.updateTime})
    </foreach>
  </insert>

  <delete id="deleteByIds">
    delete from eis_req_pool_spm
    where id in
    <foreach collection="ids" item="id" open="(" close=")" separator=",">
      #{id}
    </foreach>
  </delete>
</mapper>