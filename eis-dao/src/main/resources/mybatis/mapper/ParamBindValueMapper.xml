<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.netease.hz.bdms.easyinsight.dao.ParamBindValueMapper">
  <resultMap id="BaseResultMap" type="com.netease.hz.bdms.easyinsight.dao.model.ParamBindValue">
    <id column="id" jdbcType="BIGINT" property="id"/>
    <result column="bind_id" jdbcType="BIGINT" property="bindId" />
    <result column="param_value_id" jdbcType="BIGINT" property="paramValueId" />
    <result column="app_id" jdbcType="BIGINT" property="appId" />
    <result column="description" jdbcType="VARCHAR" property="description"/>
    <result column="create_email" jdbcType="VARCHAR" property="createEmail"/>
    <result column="create_name" jdbcType="VARCHAR" property="createName"/>
    <result column="update_email" jdbcType="VARCHAR" property="updateEmail"/>
    <result column="update_name" jdbcType="VARCHAR" property="updateName"/>
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime"/>
  </resultMap>

  <sql id="tableName">
    `eis_param_bind_value`
  </sql>
  <sql id="Base_Column_List">
    id, bind_id,param_value_id, app_id, description, create_email, create_name, update_email,
    update_name, create_time, update_time
  </sql>

  <insert id="batchInsert">
    insert into <include refid="tableName"/>
    (bind_id,param_value_id, app_id, description, create_email, create_name, update_email,
    update_name)
    values
    <foreach collection="paramBindValues" item="paramBindValue" separator=",">
      (#{paramBindValue.bindId},#{paramBindValue.paramValueId}, #{paramBindValue.appId},
      #{paramBindValue.description}, #{paramBindValue.createEmail}, #{paramBindValue.createName},
      #{paramBindValue.updateEmail}, #{paramBindValue.updateName})
    </foreach>
  </insert>

  <insert id="insert" parameterType="com.netease.hz.bdms.easyinsight.dao.model.ParamBind"
    useGeneratedKeys="true" keyColumn="id" keyProperty="id">
    insert into
    <include refid="tableName"/>
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="bindId != null">
        bind_id,
      </if>
      <if test="paramValueId != null">
        param_value_id,
      </if>
      <if test="appId != null">
        app_id,
      </if>
      <if test="description != null">
        description,
      </if>
      <if test="createEmail != null">
        create_email,
      </if>
      <if test="createName != null">
        create_name,
      </if>
      <if test="updateEmail != null">
        update_email,
      </if>
      <if test="updateName != null">
        update_name,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="bindId != null">
        #{bindId,jdbcType=BIGINT},
      </if>
      <if test="paramValueId != null">
        #{paramValueId,jdbcType=BIGINT},
      </if>
      <if test="appId != null">
        #{appId,jdbcType=BIGINT},
      </if>
      <if test="description != null">
        #{description,jdbcType=VARCHAR},
      </if>
      <if test="createEmail != null">
        #{createEmail,jdbcType=VARCHAR},
      </if>
      <if test="createName != null">
        #{createName,jdbcType=VARCHAR},
      </if>
      <if test="updateEmail != null">
        #{updateEmail,jdbcType=VARCHAR},
      </if>
      <if test="updateName != null">
        #{updateName,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>



  <update id="update" parameterType="com.netease.hz.bdms.easyinsight.dao.model.ParamBind">
    update <include refid="tableName"/>
    <set>
      <if test="bindId != null">
        bind_id = #{bindId,jdbcType=BIGINT},
      </if>
      <if test="paramValueId != null">
        param_value_id = #{paramValueId,jdbcType=BIGINT},
      </if>
      <if test="appId != null">
        app_id = #{appId,jdbcType=BIGINT},
      </if>
      <if test="description != null">
        description = #{description,jdbcType=VARCHAR},
      </if>
      <if test="updateEmail != null">
        update_email = #{updateEmail,jdbcType=VARCHAR},
      </if>
      <if test="updateName != null">
        update_name = #{updateName,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>


  <select id="selectByPrimaryKey" resultMap="BaseResultMap">
    select <include refid="Base_Column_List" />
    from <include refid="tableName" />
    where id = #{id,jdbcType=BIGINT}
  </select>

  <select id="selectByBindIds" resultMap="BaseResultMap">
    select <include refid="Base_Column_List" />
    from <include refid="tableName" />
    where bind_id in
    <foreach collection="bindIds" item="bindId" open="(" close=")" separator=",">
      #{bindId}
    </foreach>
  </select>

  <select id="selectByParamValueIds" resultMap="BaseResultMap">
    select <include refid="Base_Column_List" />
    from <include refid="tableName" />
    where param_value_id in
    <foreach collection="paramValueIds" item="paramValueId" open="(" close=")" separator=",">
      #{paramValueId}
    </foreach>
  </select>

  <delete id="delete">
    delete from
    <include refid="tableName"/>
    where id = #{id, jdbcType=BIGINT}
  </delete>

  <delete id="deleteByAppId">
    delete from
    <include refid="tableName"/>
    where app_id = #{appId, jdbcType=BIGINT}
  </delete>

  <delete id="deleteByBindIds">
    delete from
    <include refid="tableName" />
    where bind_id in
    <foreach collection="bindIds" item="bindId" open="(" close=")" separator=",">
      #{bindId}
    </foreach>
  </delete>

  <delete id="deleteByBindId">
    delete from
    <include refid="tableName" />
    where bind_id = #{bindId}
  </delete>
</mapper>