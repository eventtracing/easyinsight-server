<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.netease.hz.bdms.easyinsight.dao.rbac.AuthMapper">

    <resultMap id="BaseResultMap" type="com.netease.hz.bdms.easyinsight.dao.model.rbac.Auth">
        <id column="id" jdbcType="BIGINT" property="id"/>
        <result column="auth_name" jdbcType="VARCHAR" property="authName"/>
        <result column="auth_code" jdbcType="INTEGER" property="authCode"/>
        <result column="auth_parent_code" jdbcType="INTEGER" property="authParentCode"/>
        <result column="auth_type" jdbcType="INTEGER" property="authType"/>
        <result column="auth_sort" jdbcType="INTEGER" property="authSort"/>
        <result column="description" jdbcType="VARCHAR" property="description"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="update_time" jdbcType="TIMESTAMP" property="updateTime"/>
    </resultMap>

    <sql id="Base_Column_List">
        id, auth_name, auth_code, auth_parent_code, auth_type, auth_sort, description, create_time, update_time
    </sql>

    <sql id="table_name">eis_auth</sql>

    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from
        <include refid="table_name"/>
        where id = #{id,jdbcType=BIGINT}
    </select>

    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
        delete from
        <include refid="table_name"/>
        where id = #{id,jdbcType=BIGINT}
    </delete>

    <insert id="insert" keyColumn="id" keyProperty="id" useGeneratedKeys="true"
            parameterType="com.netease.hz.bdms.easyinsight.dao.model.rbac.Auth">
        insert into
        <include refid="table_name"/>
        (auth_name, auth_code, auth_parent_code,
        auth_type, auth_sort, description,
        create_time, update_time)
        values
        (#{authName,jdbcType=VARCHAR}, #{authCode,jdbcType=INTEGER}, #{authParentCode,jdbcType=INTEGER},
        #{authType,jdbcType=INTEGER}, #{authSort,jdbcType=INTEGER}, #{description,jdbcType=VARCHAR},
        #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP})
    </insert>

    <insert id="insertSelective" keyColumn="id" keyProperty="id" useGeneratedKeys="true"
            parameterType="com.netease.hz.bdms.easyinsight.dao.model.rbac.Auth">
        insert into
        <include refid="table_name"/>
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="authName != null">
                auth_name,
            </if>
            <if test="authCode != null">
                auth_code,
            </if>
            <if test="authParentCode != null">
                auth_parent_code,
            </if>
            <if test="authType != null">
                auth_type,
            </if>
            <if test="authSort != null">
                auth_sort,
            </if>
            <if test="description != null">
                description,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="updateTime != null">
                update_time,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="authName != null">
                #{authName,jdbcType=VARCHAR},
            </if>
            <if test="authCode != null">
                #{authCode,jdbcType=INTEGER},
            </if>
            <if test="authParentCode != null">
                #{authParentCode,jdbcType=INTEGER},
            </if>
            <if test="authType != null">
                #{authType,jdbcType=INTEGER},
            </if>
            <if test="authSort != null">
                #{authSort,jdbcType=INTEGER},
            </if>
            <if test="description != null">
                #{description,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                #{updateTime,jdbcType=TIMESTAMP},
            </if>
        </trim>
    </insert>

    <update id="updateByPrimaryKeySelective" parameterType="com.netease.hz.bdms.easyinsight.dao.model.rbac.Auth">
        update
        <include refid="table_name"/>
        <set>
            <if test="authName != null">
                auth_name = #{authName,jdbcType=VARCHAR},
            </if>
            <if test="authCode != null">
                auth_code = #{authCode,jdbcType=INTEGER},
            </if>
            <if test="authParentCode != null">
                auth_parent_code = #{authParentCode,jdbcType=INTEGER},
            </if>
            <if test="authType != null">
                auth_type = #{authType,jdbcType=INTEGER},
            </if>
            <if test="authSort != null">
                auth_sort = #{authSort,jdbcType=INTEGER},
            </if>
            <if test="description != null">
                description = #{description,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime,jdbcType=TIMESTAMP},
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>

    <update id="updateByPrimaryKey" parameterType="com.netease.hz.bdms.easyinsight.dao.model.rbac.Auth">
        update
        <include refid="table_name"/>
        set
        auth_name = #{authName,jdbcType=VARCHAR},
        auth_code = #{authCode,jdbcType=INTEGER},
        auth_parent_code = #{authParentCode,jdbcType=INTEGER},
        auth_type = #{authType,jdbcType=INTEGER},
        auth_sort = #{authSort,jdbcType=INTEGER},
        description = #{description,jdbcType=VARCHAR},
        create_time = #{createTime,jdbcType=TIMESTAMP},
        update_time = #{updateTime,jdbcType=TIMESTAMP}
        where id = #{id,jdbcType=BIGINT}
    </update>

    <select id="selectByCodes" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from
        <include refid="table_name"/>
        <where>
            <if test="authCodeList !=null and authCodeList.size() > 0 ">
                auth_code in
                <foreach collection="authCodeList" item="authCode" open="(" separator="," close=")">
                    #{authCode}
                </foreach>
            </if>
        </where>
    </select>

    <select id="selectByRoleIdList" resultMap="BaseResultMap">
        SELECT
        au.id,
        au.auth_name,
        au.auth_code,
        au.auth_parent_code,
        au.auth_type,
        au.description,
        au.create_time,
        au.update_time
        FROM
        <include refid="table_name"/>
        au
        INNER JOIN eis_role_auth ra ON au.id = ra.auth_id
        <where>
            <if test="roleIdList !=null and roleIdList.size() > 0 ">
                ra.role_id in
                <foreach collection="roleIdList" item="roleId" open="(" separator="," close=")">
                    #{roleId}
                </foreach>
            </if>
        </where>
        ORDER BY au.auth_sort asc
    </select>

    <select id="selectByPrimaryKeyList" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from
        <include refid="table_name"/>
        <where>
            <if test="authIdList !=null and authIdList.size() > 0 ">
                id in
                <foreach collection="authIdList" item="authId" open="(" separator="," close=")">
                    #{authId}
                </foreach>
            </if>
        </where>
    </select>

</mapper>