<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.netease.hz.bdms.easyinsight.dao.ParamValueMapper">
  <resultMap id="BaseResultMap" type="com.netease.hz.bdms.easyinsight.dao.model.ParamValue">
    <id column="id" jdbcType="BIGINT" property="id"/>
    <result column="param_id" jdbcType="BIGINT" property="paramId" />
    <result column="code" jdbcType="VARCHAR" property="code" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="app_id" jdbcType="BIGINT" property="appId" />
    <result column="description" jdbcType="VARCHAR" property="description"/>
    <result column="create_email" jdbcType="VARCHAR" property="createEmail"/>
    <result column="create_name" jdbcType="VARCHAR" property="createName"/>
    <result column="update_email" jdbcType="VARCHAR" property="updateEmail"/>
    <result column="update_name" jdbcType="VARCHAR" property="updateName"/>
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime"/>
  </resultMap>

  <sql id="tableName">
    `eis_param_value`
  </sql>
  <sql id="Base_Column_List">
    id, param_id, code, name, app_id, description, create_email, create_name, update_email,
    update_name, create_time, update_time
  </sql>

  <insert id="insert" parameterType="com.netease.hz.bdms.easyinsight.dao.model.ParamValue"
    useGeneratedKeys="true" keyColumn="id" keyProperty="id">
    insert into
    <include refid="tableName"/>
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="paramId != null">
        param_id,
      </if>
      <if test="code != null">
        code,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="appId != null">
        app_id,
      </if>
      <if test="description != null">
        description,
      </if>
      <if test="createEmail != null">
        create_email,
      </if>
      <if test="createName != null">
        create_name,
      </if>
      <if test="updateEmail != null">
        update_email,
      </if>
      <if test="updateName != null">
        update_name,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="paramId != null">
        #{paramId, jdbcType=BIGINT},
      </if>
      <if test="code != null">
        #{code, jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        #{name, jdbcType=VARCHAR},
      </if>
      <if test="appId != null">
        #{appId,jdbcType=BIGINT},
      </if>
      <if test="description != null">
        #{description,jdbcType=VARCHAR},
      </if>
      <if test="createEmail != null">
        #{createEmail,jdbcType=VARCHAR},
      </if>
      <if test="createName != null">
        #{createName,jdbcType=VARCHAR},
      </if>
      <if test="updateEmail != null">
        #{updateEmail,jdbcType=VARCHAR},
      </if>
      <if test="updateName != null">
        #{updateName,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>

  <update id="update" parameterType="com.netease.hz.bdms.easyinsight.dao.model.ParamValue">
    update <include refid="tableName"/>
    <set>
      <if test="paramId != null">
        param_id = #{paramId, jdbcType=BIGINT},
      </if>
      <if test="code != null">
        code = #{code, jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        name = #{name, jdbcType=VARCHAR},
      </if>
      <if test="appId != null">
        app_id = #{appId,jdbcType=BIGINT},
      </if>
      <if test="description != null">
        description = #{description,jdbcType=VARCHAR},
      </if>
      <if test="updateEmail != null">
        update_email = #{updateEmail,jdbcType=VARCHAR},
      </if>
      <if test="updateName != null">
        update_name = #{updateName,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>


<!--  <select id="selectByName" resultMap="BaseResultMap">-->
<!--    select <include refid="Base_Column_List" />-->
<!--    from <include refid="tableName" />-->
<!--    where name = #{name,jdbcType=VARCHAR}-->
<!--  </select>-->

  <select id="selectByPrimaryKey" resultMap="BaseResultMap">
    select <include refid="Base_Column_List" />
    from <include refid="tableName" />
    where id = #{id,jdbcType=BIGINT}
  </select>

  <select id="selectBatchByIds" resultMap="BaseResultMap">
    select <include refid="Base_Column_List" />
    from <include refid="tableName" />
    where id in
    <foreach collection="ParamValueIds" item="paramValueId" open="(" close=")" separator=",">
      #{paramValueId}
    </foreach>
  </select>

  <select id="selectByParamIds" resultMap="BaseResultMap">
    select <include refid="Base_Column_List" />
    from <include refid="tableName" />
    where param_id in
    <foreach collection="paramIds" item="paramId" open="(" close=")" separator=",">
      #{paramId}
    </foreach>
  </select>


  <delete id="delete">
    delete from
    <include refid="tableName"/>
    where id = #{id, jdbcType=BIGINT}
  </delete>

  <delete id="deleteByAppId">
    delete from
    <include refid="tableName"/>
    where app_id = #{appId, jdbcType=BIGINT}
  </delete>

  <delete id="deleteByParamId">
    delete from
    <include refid="tableName"/>
    where param_id = #{paramId, jdbcType=BIGINT}
  </delete>

  <delete id="deleteByIds">
    delete from
    <include refid="tableName"/>
    where id in
    <foreach collection="ids" item="id" open="(" close=")" separator=",">
      #{id}
    </foreach>
  </delete>

  <select id="selectParamValues" resultMap="BaseResultMap">
    select <include refid="Base_Column_List" />
    from <include refid="tableName" />
    where param_id = #{paramId,jdbcType=BIGINT}
    <if test="search != null and search != ''">
      and (code like concat("%",#{search},"%")
        or name like concat("%",#{search},"%"))
    </if>
  </select>

  <select id="selectParamValueSizeByParamId" resultType="java.lang.Integer">
    select count(*)
    from <include refid="tableName" />
    where param_id = #{paramId,jdbcType=BIGINT}
  </select>
</mapper>